Applied patch tests/user_commands/tests.py 
+ ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 user_commands.management.commands.subparser_vanilla user_commands.tests
Testing against Django installed in '/testbed/django'
Importing application user_commands
Found 46 test(s).
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
test_disallowed_abbreviated_options (user_commands.tests.CommandRunTests.test_disallowed_abbreviated_options)
To avoid conflicts with custom options, commands don't allow ... ok
test_script_prefix_set_in_commands (user_commands.tests.CommandRunTests.test_script_prefix_set_in_commands) ... ok
test_skip_checks (user_commands.tests.CommandRunTests.test_skip_checks) ... ok
test_subparser_error_formatting (user_commands.tests.CommandRunTests.test_subparser_error_formatting) ... ok
test_subparser_non_django_error_formatting (user_commands.tests.CommandRunTests.test_subparser_non_django_error_formatting) ... FAIL
test_call_command_no_checks (user_commands.tests.CommandTests.test_call_command_no_checks)
By default, call_command should not trigger the check framework, unless ... ok
test_call_command_option_parsing (user_commands.tests.CommandTests.test_call_command_option_parsing)
When passing the long option name to call_command, the available option ... ok
test_call_command_option_parsing_non_string_arg (user_commands.tests.CommandTests.test_call_command_option_parsing_non_string_arg)
It should be possible to pass non-string arguments to call_command. ... ok
test_call_command_unrecognized_option (user_commands.tests.CommandTests.test_call_command_unrecognized_option) ... ok
test_call_command_with_required_parameters_in_mixed_options (user_commands.tests.CommandTests.test_call_command_with_required_parameters_in_mixed_options) ... ok
test_call_command_with_required_parameters_in_options (user_commands.tests.CommandTests.test_call_command_with_required_parameters_in_options) ... ok
test_calling_a_command_with_no_app_labels_and_parameters_raise_command_error (user_commands.tests.CommandTests.test_calling_a_command_with_no_app_labels_and_parameters_raise_command_error) ... ok
test_calling_a_command_with_only_empty_parameter_should_ends_gracefully (user_commands.tests.CommandTests.test_calling_a_command_with_only_empty_parameter_should_ends_gracefully) ... ok
test_calling_command_with_app_labels_and_parameters_should_be_ok (user_commands.tests.CommandTests.test_calling_command_with_app_labels_and_parameters_should_be_ok) ... ok
test_calling_command_with_parameters_and_app_labels_at_the_end_should_be_ok (user_commands.tests.CommandTests.test_calling_command_with_parameters_and_app_labels_at_the_end_should_be_ok) ... ok
test_check_migrations (user_commands.tests.CommandTests.test_check_migrations) ... ok
test_command (user_commands.tests.CommandTests.test_command) ... ok
test_command_add_arguments_after_common_arguments (user_commands.tests.CommandTests.test_command_add_arguments_after_common_arguments) ... ok
test_command_style (user_commands.tests.CommandTests.test_command_style) ... ok
test_create_parser_kwargs (user_commands.tests.CommandTests.test_create_parser_kwargs)
BaseCommand.create_parser() passes kwargs to CommandParser. ... ok
test_discover_commands_in_eggs (user_commands.tests.CommandTests.test_discover_commands_in_eggs)
Management commands can also be loaded from Python eggs. ... ok
test_explode (user_commands.tests.CommandTests.test_explode)
An unknown command raises CommandError ... ok
test_find_command_without_PATH (user_commands.tests.CommandTests.test_find_command_without_PATH)
find_command should still work when the PATH environment variable ... ok
test_language_preserved (user_commands.tests.CommandTests.test_language_preserved) ... ok
test_mutually_exclusive_group_required_const_options (user_commands.tests.CommandTests.test_mutually_exclusive_group_required_const_options) ... ok
test_mutually_exclusive_group_required_options (user_commands.tests.CommandTests.test_mutually_exclusive_group_required_options) ... ok
test_mutually_exclusive_group_required_with_same_dest_args (user_commands.tests.CommandTests.test_mutually_exclusive_group_required_with_same_dest_args) ... ok
test_mutually_exclusive_group_required_with_same_dest_options (user_commands.tests.CommandTests.test_mutually_exclusive_group_required_with_same_dest_options) ... ok
test_no_translations_deactivate_translations (user_commands.tests.CommandTests.test_no_translations_deactivate_translations)
When the Command handle method is decorated with @no_translations, ... ok
test_output_transaction (user_commands.tests.CommandTests.test_output_transaction) ... ok
test_outputwrapper_flush (user_commands.tests.CommandTests.test_outputwrapper_flush) ... ok
test_required_const_options (user_commands.tests.CommandTests.test_required_const_options) ... ok
test_required_list_option (user_commands.tests.CommandTests.test_required_list_option) ... ok
test_requires_system_checks_empty (user_commands.tests.CommandTests.test_requires_system_checks_empty) ... ok
test_requires_system_checks_invalid (user_commands.tests.CommandTests.test_requires_system_checks_invalid) ... ok
test_requires_system_checks_specific (user_commands.tests.CommandTests.test_requires_system_checks_specific) ... ok
test_subparser (user_commands.tests.CommandTests.test_subparser) ... ok
test_subparser_dest_args (user_commands.tests.CommandTests.test_subparser_dest_args) ... ok
test_subparser_dest_required_args (user_commands.tests.CommandTests.test_subparser_dest_required_args) ... ok
test_subparser_invalid_option (user_commands.tests.CommandTests.test_subparser_invalid_option) ... ok
test_system_exit (user_commands.tests.CommandTests.test_system_exit)
Exception raised in a command should raise CommandError with ... ok
test_get_random_secret_key (user_commands.tests.UtilsTests.test_get_random_secret_key) ... ok
test_is_ignored_path_false (user_commands.tests.UtilsTests.test_is_ignored_path_false) ... ok
test_is_ignored_path_true (user_commands.tests.UtilsTests.test_is_ignored_path_true) ... ok
test_no_existent_external_program (user_commands.tests.UtilsTests.test_no_existent_external_program) ... ok
test_normalize_path_patterns_truncates_wildcard_base (user_commands.tests.UtilsTests.test_normalize_path_patterns_truncates_wildcard_base) ... ok

======================================================================
FAIL: test_subparser_non_django_error_formatting (user_commands.tests.CommandRunTests.test_subparser_non_django_error_formatting)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/user_commands/tests.py", line 488, in test_subparser_non_django_error_formatting
    self.assertEqual(len(err_lines), 2)
AssertionError: 24 != 2

----------------------------------------------------------------------
Ran 46 tests in 1.009s

FAILED (failures=1)
+ git checkout 1250483ebf73f7a82ff820b94092c63ce4238264 tests/user_commands/tests.py
Updated 1 path from 5c4bf71a54

