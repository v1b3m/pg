Testing against Django installed in '/testbed/django'
Importing application check_framework
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, check_framework, contenttypes, messages, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table check_framework_simplemodel
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
System check identified no issues (0 silenced).
test_collision_abstract_model (check_framework.test_model_checks.ConstraintNameTests) ... ok
test_collision_across_apps (check_framework.test_model_checks.ConstraintNameTests) ... ok
test_collision_in_different_models (check_framework.test_model_checks.ConstraintNameTests) ... ok
test_collision_in_same_model (check_framework.test_model_checks.ConstraintNameTests) ... ok
test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.ConstraintNameTests) ... ok
test_no_collision_across_apps_interpolation (check_framework.test_model_checks.ConstraintNameTests) ... ok
test_collision_across_apps (check_framework.test_model_checks.DuplicateDBTableTests) ... ok
test_collision_across_apps_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests) ... ok
test_collision_in_same_app (check_framework.test_model_checks.DuplicateDBTableTests) ... ok
test_collision_in_same_app_database_routers_installed (check_framework.test_model_checks.DuplicateDBTableTests) ... ok
test_no_collision_for_proxy_models (check_framework.test_model_checks.DuplicateDBTableTests) ... ok
test_no_collision_for_unmanaged_models (check_framework.test_model_checks.DuplicateDBTableTests) ... ok
test_collision_abstract_model (check_framework.test_model_checks.IndexNameTests) ... ok
test_collision_across_apps (check_framework.test_model_checks.IndexNameTests) ... ok
test_collision_in_different_models (check_framework.test_model_checks.IndexNameTests) ... ok
test_collision_in_same_model (check_framework.test_model_checks.IndexNameTests) ... ok
test_no_collision_abstract_model_interpolation (check_framework.test_model_checks.IndexNameTests) ... ok
test_no_collision_across_apps_interpolation (check_framework.test_model_checks.IndexNameTests) ... ok
test_app_default_auto_field (check_framework.test_model_checks.ModelDefaultAutoFieldTests) ... ok
test_auto_created_inherited_parent_link (check_framework.test_model_checks.ModelDefaultAutoFieldTests) ... ok
test_auto_created_inherited_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests) ... FAIL
test_auto_created_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests) ... ok
test_default_auto_field_setting (check_framework.test_model_checks.ModelDefaultAutoFieldTests) ... ok
test_explicit_inherited_parent_link (check_framework.test_model_checks.ModelDefaultAutoFieldTests) ... ok
test_explicit_inherited_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests) ... ok
test_explicit_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests) ... ok

======================================================================
FAIL: test_auto_created_inherited_pk (check_framework.test_model_checks.ModelDefaultAutoFieldTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/opt/miniconda3/envs/testbed/lib/python3.8/unittest/mock.py", line 1325, in patched
    return func(*newargs, **newkeywargs)
  File "/testbed/tests/check_framework/test_model_checks.py", line 422, in test_auto_created_inherited_pk
    self.assertEqual(checks.run_checks(app_configs=self.apps.get_app_configs()), [
AssertionError: Lists differ: [<War[448 chars]042'>, <Warning: level=30, msg="Auto-created p[413 chars]42'>] != [<War[448 chars]042'>]

First list contains 1 additional elements.
First extra element 1:
<Warning: level=30, msg="Auto-created primary key used when not defining a primary key type, by default 'django.db.models.AutoField'.", hint="Configure the DEFAULT_AUTO_FIELD setting or the CheckDefaultPKConfig.default_auto_field attribute to point to a subclass of AutoField, e.g. 'django.db.models.BigAutoField'.", obj=<class 'check_framework.test_model_checks.ModelDefaultAutoFieldTests.test_auto_created_inherited_pk.<locals>.Child'>, id='models.W042'>

Diff is 2311 characters long. Set self.maxDiff to None to see it.

----------------------------------------------------------------------
Ran 26 tests in 0.056s

FAILED (failures=1)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
+ git checkout 0c42cdf0d2422f4c080e93594d5d15381d6e955e tests/check_framework/test_model_checks.py
Updated 1 path from 6403efc1a2

